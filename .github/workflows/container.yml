name: Build and Publish Container

on:
  push:
    branches: [ main ]
    tags: ['v*']
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/anteew/comma-tools
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build multi-arch and push (main/tags)
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            OPENPILOT_VERSION=v0.10.0
            OPENPILOT_COMMIT=c085b8af19438956c1559
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build single-arch and load (PR)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          load: true
          tags: ghcr.io/anteew/comma-tools:pr-${{ github.event.number }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            OPENPILOT_VERSION=v0.10.0
            OPENPILOT_COMMIT=c085b8af19438956c1559
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test vendor dependencies (PR)
        if: github.event_name == 'pull_request'
        run: |
          echo "Testing vendor dependencies in built image..."

          # Copy test script into container and run it
          docker run --rm \
            -v ${{ github.workspace }}/.github/scripts/test-container-vendor.py:/test-vendor.py:ro \
            ghcr.io/anteew/comma-tools:pr-${{ github.event.number }} \
            cli python3 /test-vendor.py

          # Test that CLI mode works
          echo "Testing CLI mode functionality..."
          docker run --rm ghcr.io/anteew/comma-tools:pr-${{ github.event.number }} cli cts ping

      - name: Save image to tar (PR)
        if: github.event_name == 'pull_request'
        run: |
          docker image inspect ghcr.io/anteew/comma-tools:pr-${{ github.event.number }} >/dev/null 2>&1
          docker save ghcr.io/anteew/comma-tools:pr-${{ github.event.number }} -o comma-tools-pr-${{ github.event.number }}.tar

      - name: Upload image artifact (PR)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: comma-tools-image-pr-${{ github.event.number }}
          path: comma-tools-pr-${{ github.event.number }}.tar
          if-no-files-found: error
