name: Black Code Formatter

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  black:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # This is crucial - fetch the actual branch, not just the merge commit
        ref: ${{ github.event.pull_request.head.ref || github.ref }}
        # Fetch full history for proper git operations
        fetch-depth: 0
        # Use the token to allow pushing if needed
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # Match repository Python version

    - name: Install Black
      run: |
        python -m pip install --upgrade pip
        pip install black

    - name: Configure git (for PRs that might need commits)
      if: github.event_name == 'pull_request'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Run Black formatter
      run: |
        black --check --diff src/ tests/ --line-length=100
      continue-on-error: true
      id: black_check

    - name: Apply Black formatting (if needed)
      if: steps.black_check.outcome == 'failure' && github.event_name == 'pull_request'
      run: |
        black src/ tests/ --line-length=100
        
    - name: Check if changes were made
      if: github.event_name == 'pull_request'
      id: verify_diff
      run: |
        git diff --quiet || echo "changes_made=true" >> $GITHUB_OUTPUT

    - name: Commit and push changes (if any)
      if: steps.verify_diff.outputs.changes_made == 'true' && github.event_name == 'pull_request'
      run: |
        git add -A
        git commit -m "Apply Black formatting"
        git push origin HEAD:${{ github.event.pull_request.head.ref }}

    - name: Fail if Black made changes (for CI validation)
      if: steps.black_check.outcome == 'failure'
      run: |
        echo "Black formatting is required. Changes have been automatically applied."
        exit 1